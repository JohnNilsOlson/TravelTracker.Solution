// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelTracker.Models;

namespace TravelTracker.Migrations
{
    [DbContext(typeof(TravelTrackerContext))]
    partial class TravelTrackerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TravelTracker.Models.Destination", b =>
                {
                    b.Property<int>("DestinationId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CityName");

                    b.HasKey("DestinationId");

                    b.ToTable("Destinations");
                });

            modelBuilder.Entity("TravelTracker.Models.DestinationTraveller", b =>
                {
                    b.Property<int>("DestinationTravellerId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DestinationId");

                    b.Property<int>("TravellerId");

                    b.HasKey("DestinationTravellerId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("TravellerId");

                    b.ToTable("DestinationTraveller");
                });

            modelBuilder.Entity("TravelTracker.Models.Traveller", b =>
                {
                    b.Property<int>("TravellerId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("TravellerId");

                    b.ToTable("Travellers");
                });

            modelBuilder.Entity("TravelTracker.Models.DestinationTraveller", b =>
                {
                    b.HasOne("TravelTracker.Models.Destination", "Destination")
                        .WithMany("Travellers")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TravelTracker.Models.Traveller", "Traveller")
                        .WithMany("Destinations")
                        .HasForeignKey("TravellerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
